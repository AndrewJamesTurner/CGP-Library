Title: Installation

First download CGP-Library from http://www.andrewjamesturner.co.uk and unzip the file.

Simplest:

The simplest method of using the CGP-Library is to include cgp.c and cgp.h to your build path and compile them along with your own files. On windows the macro NO_DLL must also be #defined at compile time.

For instance #include "cgp.h" and then compile your program similar too

    >$ gcc yourFiles.c cgp.c cgp.h -D NO_DLL


Standard:

The standard method of using dynamic libraries is to link against the compiled library.

Ubuntu:

To compile the shared object (.so) open a terminal in the CGP-Library directory and run

    >$ make so

Then copy the generated libcgp.so to /usr/lib by running

    >$ sudo cp libcgp.so /usr/lib

Give libcgp.so the necessary permissions by running

    >$ sudo chmod 0755 /usr/lib/libcgp.so

Now copy cgp.h to /usr/include by running

    >$ sudo cp include/cgp.h /usr/include/

Now update the system so it knows about libcgp.so

    >$ sudo ldconfig
   
Finally to check that CGP-Library has been installed    
    
	>ldconfig -p | grep libcgp    

Once CGP-Library has been installed it can be used by #include <cgp.h> in your project and linking against the libcgp.so using the -lcgp compiler flag. Similar to

    >$ gcc yourFiles.c -lcgp

Windows:

For windows the CGP-Library has been pre-compiled into CGP-Library.dll. In order to use CGP-Library.dll there are two options 1) place CGP-Library.dll in the same directory as any executables which use the CGP-Library, or 2) place CGP-Library.dll in the standard windows location for dynamic-link library i.e. C:\Windows\System32 for 32bit or C:\Windows\SysWOW64 for 64bit. Then #include "cgp.h" when compiling any programs which use the CGP-Library.


